---   
  - name: Deploy FES artifact
    hosts: localhost
    gather_facts: true
    collections:
      - ch_collections.base
    vars:
      cert_name: "chca"
      application_name: "fes"
      application_component: "fes-control"
      home_dir: "/home/fes"
      app_dir: "/opt/tomcat/latest/webapps"
      config_files:
        - "FES"
    roles:
      - name: ch_collections.base.cloudwatch_agent_config
        when: cw_log_files is defined
    
    tasks:
      - name: Download the cert artifact from S3
        aws_s3:
          bucket: "{{ s3_bucket_resources }}"
          object: "chl-fes/{{ cert_name }}.pem"
          dest: "/etc/pki/ca-trust/source/anchors/{{ cert_name }}.pem"
          mode: get

      - name: Check the version and location of Java install
        shell: dirname $(dirname $(readlink -f $(which javac)))
        register: java_location

      - name: Import CH cert into Oracle JDK Keystore
        community.general.java_cert:
          cert_path: /etc/pki/ca-trust/source/anchors/{{ cert_name }}.pem
          keystore_path: "{{ java_location.stdout }}/jre/lib/security/cacerts"
          keystore_pass: changeit
          state: present
          cert_alias: chca
          trust_cacert: True

      - name: Download the versioned release artifact from S3
        aws_s3:
          bucket: "{{ s3_bucket_releases }}"
          object: "chl-fes/{{ application_component }}-{{ version }}.tar.gz"
          dest: "/tmp/{{ application_component }}-{{ version }}.tar.gz"
          mode: get

      - name: unarchive application file
        ansible.builtin.unarchive:
          src: "/tmp/{{ application_component }}-{{ version }}.tar.gz"
          dest: "{{ app_dir }}/"
          owner: tomcat
          group: tomcat
          remote_src: yes
      
      - name: Download environment config files from S3
        aws_s3:
          bucket: "{{ s3_bucket_configs }}"
          object: "chl-{{ application_name }}-configs/{{ heritage_environment }}/{{ item | upper }}.properties"
          dest: "{{ app_dir }}/{{ item | upper }}.properties"
          mode: get
        loop: "{{ config_files }}"

      - name: Change config owners and permission
        ansible.builtin.file:
          path: "{{ app_dir }}/{{ item | upper }}.properties"
          owner: tomcat
          group: tomcat
          mode: '0755'
        loop: "{{ config_files }}"
        
      - name: Ensure Tomcat service is enabled
        ansible.builtin.service:
          name: tomcat.service
          state: started
          enabled: yes
      
    handlers:
      - name: Reload systemd
        systemd:
          daemon_reload: yes