---
  - name: Deploy FES artifact
    hosts: localhost
    gather_facts: true
    collections:
      - ch_collections.base
    vars:
      ansible_python_interpreter: /usr/local/bin/python3.6
      application_name: "fes"
      home_dir: "/home/fes"
      directories:
        - "data"
        - "supportscripts"
      config_files:
        - "FES.properties"
    roles:
      - { role: /root/roles/nfs_mounts }
      - name: ch_collections.base.cloudwatch_agent_config
        when: cw_log_files is defined
    tasks:
      - name: Download the versioned release artifact from S3
        aws_s3:
          bucket: "{{ s3_bucket_releases }}"
          object: "chl-perl/{{ application_name }}/{{ application_name }}-{{ version }}.zip"
          dest: "/tmp/{{ application_name }}-{{ version }}.zip"
          mode: get

      - name: Create temporary app folder for unzip
        file:
          path: "/tmp/{{ application_name }}-{{ version }}"
          state: directory

      - name: Unarchive the artifact into its own folder
        unarchive:
          remote_src: yes
          src: "/tmp/{{ application_name }}-{{ version }}.zip"
          dest: "/tmp/{{ application_name }}-{{ version }}"

      - name: Copy app directories to app user home
        vars:
          ansible_python_interpreter: /usr/bin/python2.6
        copy:
          src: "/tmp/{{ application_name }}-{{ version }}/{{ item }}"
          dest: "{{ home_dir }}/"
          mode: '0755'
          owner: "{{ home_dir | basename }}"
          group: chlservices
          remote_src: yes
        loop: "{{ directories }}"

      - name: Make sure config directory exists
        file:
          path: "{{ home_dir }}/config/My"
          state: directory
          recurse: yes
          mode: '0755'

      - name: Download environment config files from S3
        aws_s3:
          bucket: "{{ s3_bucket_configs }}"
          object: "chl-{{ application_name }}-configs/{{ heritage_environment }}/{{ item | upper }}Config.pm"
          dest: "{{ home_dir }}/config/My/{{ item | upper }}Config.pm"
          mode: get
        loop: "{{ config_files }}"

      - name: Change config owners and permission
        ansible.builtin.file:
          path: "{{ home_dir }}/config/My/{{ item | upper }}Config.pm"
          owner: "{{ home_dir | basename }}"
          group: chlservices
          mode: '0755'
        loop: "{{ config_files }}"

      - name: Create Matomo templates
        command: perl -I {{ home_dir }}/config/ {{ home_dir }}/htdocs/efiling/templates/tracker.pl
        args:
          creates: "{{ home_dir }}/htdocs/efiling/templates/tracker.pl"

      - name: Cleanup install files
        file:
          path: "{{ item }}"
          state: absent
        with_items:
          - "/tmp/{{ application_name }}-{{ version }}"
          - "/tmp/{{ application_name }}-{{ version }}.zip"

      - name: Ensure apache config files are all owned and permissions are set correctly
        ansible.builtin.file:
          path: "{{ item }}"
          owner: "{{ home_dir | basename }}"
          group: chlservices
          mode: '0644'
        loop:
          - /etc/httpd/conf/httpd.conf
          - /etc/httpd/conf/ewf_startup.pl
          - /etc/httpd/conf.d/ewf_perl.conf

      - name: Make sure Apache is started
        service:
          name: "httpd"
          state: restarted
          enabled: yes
